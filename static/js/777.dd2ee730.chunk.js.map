{"version":3,"file":"static/js/777.dd2ee730.chunk.js","mappings":"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","sources":["Components/Products.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { Helmet } from 'react-helmet-async';\r\nimport axios from \"../api/services\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Typography from '@mui/material/Typography';\r\nimport \"../styles/Products.scss\";\r\nimport Container from '@mui/material/Container';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport Loader from \"./Loader\";\r\n\r\nconst Product = React.lazy(() => import(\"./Product\"));\r\n\r\nconst Products = () => {\r\n  const navigate = useNavigate();\r\n  const productsPerPage = 6;\r\n  const { route } = useParams();\r\n  const [searchParams] = useSearchParams();\r\n  const [allProducts, setAllProducts] = useState(JSON.parse(sessionStorage.getItem('allProducts')) || []);\r\n  const [products, setProducts] = useState([]);\r\n  const [index, setIndex] = useState(sessionStorage.getItem('productsPerPage') || productsPerPage);\r\n  const [productCategoryHeader, setProductCategoryHeader] = useState('');\r\n  const [allCategories, setAllCategories] = React.useState([]);\r\n  const [category, setCategory] = React.useState('allProducts');\r\n  const [subCategories, setSubCategories] = React.useState([]);\r\n  const [subCategory, setSubCategory] = React.useState('all');\r\n  const [sortProductsBy, setSortProductsBy] = useState('nameAsc');\r\n  const [noResultsFound, setNoResultsFound] = React.useState('No products found. Please refine your search and try again.');\r\n  const [isLoading, setLoading] = React.useState(true);\r\n\r\n  const fetchAllProducts = async () => {\r\n    try {\r\n      let allProducts = null;\r\n      const response = await axios(`/${process.env.REACT_APP_GOOGLE_SHEET_ID}/values/products`);\r\n      response.data.values.shift(); //Remove first row which is column headers from data\r\n      // console.log('response.data.values ', response.data.values)\r\n      allProducts = response.data.values.map((product, index) => {\r\n        if (product.length) { //empty row check\r\n          //Split a string by newline and remove empty strings after splitting\r\n          let allCategories = product[1]?.split(/[.\\r?\\n]/).filter(element => element);\r\n          let allSubCategories = product[2]?.split(/[.\\r?\\n]/).filter(element => element);\r\n          let allFeatures = product[3]?.split(/[.\\r?\\n]/).filter(element => element);\r\n          let allThumbnailsSrc = product[9]?.split(/[\\r?\\n]/).filter(element => element); \r\n          let allThumbnailsAlt = product[10]?.split(/[\\r?\\n]/).filter(element => element);\r\n          let allThumbnailsPrices = product[11]?.split(/[.\\r?\\n]/).filter(element => element);\r\n          return {\r\n            \"name\": product[0],\r\n            \"seo_keywords\": `${product[0]} details`,\r\n            \"features\": allFeatures?.map(feature => feature.trim()),\r\n            \"price\": product[5],\r\n            \"link\": product[4],\r\n            // \"categories\": allCategories.map(category => category.trim().toLowerCase().replaceAll(' ', '-')),\r\n            \"categories\": allCategories?.map(category => category.trim().toLowerCase()),\r\n            \"subCategories\": allSubCategories?.map(subCategory => subCategory.trim().toLowerCase()),\r\n            \"keywords\": product[6]?.split(' '),\r\n            \"mainImg\": {\r\n              \"src\": product[7],\r\n              \"alt\": product[8],\r\n            },\r\n            \"thumbnails\": allThumbnailsSrc?.map((thumbnail, index) => {\r\n              return {\r\n                \"src\": thumbnail?.trim(),\r\n                \"alt\": allThumbnailsAlt[index]?.trim(),\r\n                \"price\": allThumbnailsPrices ? allThumbnailsPrices[index]?.trim() : product[5]\r\n              }\r\n            })\r\n          }\r\n        }\r\n        else {\r\n          return null;\r\n        }\r\n      });\r\n\r\n      const filteredProducts = allProducts.filter((product) => product != null); //filter null entries\r\n      if (filteredProducts.length) {\r\n        sessionStorage.setItem('allProducts', JSON.stringify(filteredProducts));\r\n        setAllProducts(filteredProducts);\r\n        initializeProducts(filteredProducts);\r\n        initializeCategories(filteredProducts);\r\n        initializeSubCategories(filteredProducts);\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const initializeCategories = (allProducts) => {\r\n    let categories = [];\r\n\r\n    allProducts.map(product => {\r\n      categories.push(...product.categories);\r\n    });\r\n\r\n    setAllCategories([...new Set(categories)]);\r\n  };\r\n\r\n  const initializeSubCategories = (allProducts) => {\r\n    let subCategories = [];\r\n\r\n    allProducts.map(product => {\r\n      subCategories.push(...product.subCategories);\r\n    });\r\n\r\n    setSubCategories([...new Set(subCategories)]);\r\n  };\r\n\r\n  const initializeProducts = (allProducts) => {\r\n    let results = [];\r\n    let productCategoryHeader = \"All products\";\r\n\r\n    if (route) {//filter allProducts by route\r\n      let productCategory = route.replaceAll('-', ' ');\r\n      results = allProducts.filter((product) => {\r\n        return product.categories.includes(productCategory);\r\n      });\r\n      productCategoryHeader = productCategory;\r\n    }\r\n    else if (searchParams.get('search')) {//filter allProducts by search field in navbar\r\n      let searchQuery = searchParams.get('search');\r\n      results = allProducts.filter((product) => {\r\n        return product.name.toLowerCase().includes(searchQuery.toLowerCase());\r\n      });\r\n      productCategoryHeader = searchQuery;\r\n    }\r\n    else {\r\n      results = allProducts;\r\n    }\r\n\r\n    setProducts(results);\r\n    setProductCategoryHeader(productCategoryHeader);\r\n    setLoading(false);\r\n  }\r\n\r\n  // To check for session storage\r\n  const storeProducts = async () => {\r\n    const hours = 0; // to clear the sessionStorage after 1 hour\r\n\r\n    const currentTime = new Date().getTime();\r\n    let productsSession = sessionStorage.getItem('productsSession');\r\n\r\n    if (productsSession == null) {\r\n      sessionStorage.setItem('productsSession', currentTime);\r\n      await fetchAllProducts();\r\n      console.log('products session set');\r\n    }\r\n    else {\r\n      if (currentTime - productsSession > hours * 60 * 60 * 1000) {\r\n        sessionStorage.removeItem('productsSession');\r\n        sessionStorage.setItem('productsSession', currentTime);\r\n        await fetchAllProducts();\r\n        console.log('products session refreshed');\r\n      }\r\n      else {\r\n        console.log('products session exists');\r\n        console.log('allProducts from session ', allProducts);\r\n        if (allProducts.length) {\r\n          initializeProducts(allProducts);\r\n          initializeCategories(allProducts);\r\n          initializeSubCategories(allProducts);\r\n          route && setCategory(route.replaceAll('-', ' ')); //set the category on page refresh\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    storeProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (allProducts.length) {\r\n      initializeProducts(allProducts);\r\n    }\r\n  }, [route, searchParams]);\r\n\r\n  const handleProductFilter = (event, type) => {\r\n    if (type == 'category') {\r\n      let route = event.target.value == 'allProducts' ? '' : event.target.value.replaceAll(' ', '-');\r\n      setCategory(event.target.value);\r\n      setSubCategory('all'); //reset the sub-categories\r\n      navigate(`/products/${route}`);\r\n    }\r\n    else {\r\n      let results = allProducts.filter((product) => { //filter all products based on category\r\n        return category == 'allProducts' ? product : product.categories.includes(category);\r\n      });\r\n\r\n      results = results.filter((product) => { //filter all products based on sub-category\r\n        return event.target.value == 'all' ? product : product.subCategories.includes(event.target.value);\r\n      });\r\n      setSubCategory(event.target.value);\r\n      setProducts(results);\r\n    }\r\n  }\r\n\r\n  const handleProductSorting = (event) => {\r\n    const sortBy = event.target.value;\r\n    let results;\r\n\r\n    switch (sortBy) {\r\n      case \"nameAsc\":\r\n        results = products.sort((p1, p2) => {\r\n          if (p1.name < p2.name) {\r\n            return -1;\r\n          }\r\n        });\r\n        break;\r\n      case \"nameDesc\":\r\n        results = products.sort((p1, p2) => {\r\n          if (p1.name > p2.name) {\r\n            return -1;\r\n          }\r\n        });\r\n        break;\r\n      case \"priceAsc\":\r\n        results = products.sort((p1, p2) => {\r\n          if (p1.price < p2.price) {\r\n            return -1;\r\n          }\r\n        });\r\n        break;\r\n      case \"priceDesc\":\r\n        results = products.sort((p1, p2) => {\r\n          if (p1.price > p2.price) {\r\n            return -1;\r\n          }\r\n        });\r\n        break;\r\n    }\r\n\r\n    setSortProductsBy(sortBy);\r\n    setProducts(results);\r\n  };\r\n\r\n  const handlePageSearch = (event) => {\r\n    const results = (products.length ? products : allProducts).filter((product) => product.name.toLowerCase().includes(event.target.value.toLowerCase()));\r\n\r\n    if (event.target.value === \"\") {\r\n      initializeProducts(allProducts);\r\n    }\r\n    else if (results.length) {\r\n      setProducts(results);\r\n    }\r\n    else {\r\n      setProducts([]);\r\n      setNoResultsFound(`No products were found for '${event.target.value}'. Please refine your search and try again.`);\r\n    }\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    sessionStorage.setItem('productsPerPage', (index + productsPerPage));\r\n    setIndex(index + productsPerPage);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Shubham Computers - Our Products</title>\r\n        <meta name=\"keywords\" content=\"Shubham Computers - Our Products\" />\r\n        <meta name=\"description\" content=\"Shubham Computers - Our Products\" />\r\n      </Helmet>\r\n      <Container maxWidth=\"xl\" className=\"products-page\">\r\n        <Box sx={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'start',\r\n          flexDirection: { xs: 'column', sm: 'row' },\r\n          pt: { xs: 2, sm: 2 },\r\n          px: { xs: 0 },\r\n          pb: 2\r\n        }}>\r\n          <Typography\r\n            variant=\"h1\"\r\n            sx={{\r\n              textAlign: { sm: 'left' },\r\n              fontSize: { xs: '1.5em', md: '2em' },\r\n              flexBasis: { md: '70%' },\r\n              textTransform: 'uppercase'\r\n            }}\r\n          >\r\n            {productCategoryHeader}\r\n          </Typography>\r\n          <FormControl size=\"small\" sx={{\r\n            flexBasis: { md: '30%' },\r\n            display: { xs: 'none', md: 'flex' }\r\n          }}>\r\n            <TextField\r\n              id=\"outlined-search\"\r\n              label='Search products on this page'\r\n              type=\"search\"\r\n              size=\"small\"\r\n              onInput={handlePageSearch}\r\n            />\r\n          </FormControl>\r\n        </Box>\r\n        <Box sx={{\r\n          display: 'flex',\r\n          width: { xs: '100%', sm: '100%' },\r\n          flexDirection: 'row',\r\n          mt: { xs: 0, sm: 2 },\r\n          mb: { xs: 2 },\r\n          justifyContent: 'space-between',\r\n        }}>\r\n          <FormControl size=\"small\" sx={{\r\n            flexBasis: { xs: '48%', sm: '38%' },\r\n            display: { xs: 'none', sm: 'flex' }\r\n          }}>\r\n            <InputLabel id=\"select-label\">Filter products by category</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"demo-select-small\"\r\n              value={category}\r\n              onChange={(event) => handleProductFilter(event, 'category')}\r\n              label=\"Filter products by category\"\r\n            >\r\n              <MenuItem value='allProducts'>All Products</MenuItem>\r\n              {allCategories.length > 0 &&\r\n                allCategories.map((category, index) => (\r\n                  <MenuItem value={category} key={index} sx={{ textTransform: 'capitalize' }}>{category}</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl size=\"small\" sx={{\r\n            flexBasis: { xs: '48%', sm: '38%' },\r\n          }}>\r\n            <InputLabel id=\"select-label\">Filter products by sub category</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"demo-select-small\"\r\n              value={subCategory}\r\n              onChange={(event) => handleProductFilter(event, 'subCategory')}\r\n              label=\"Filter products by sub category\"\r\n            >\r\n              <MenuItem value='all'>All sub categories</MenuItem>\r\n              {subCategories.length > 0 &&\r\n                subCategories.map((subCategory, index) => (\r\n                  <MenuItem value={subCategory} key={index} sx={{ textTransform: 'capitalize' }}>{subCategory}</MenuItem>\r\n                ))\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl size=\"small\" sx={{\r\n            flexBasis: { md: '20%' }\r\n          }}>\r\n            <InputLabel id=\"select-label\">Sort products by</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"demo-select-small\"\r\n              value={sortProductsBy}\r\n              onChange={handleProductSorting}\r\n              label=\"Sort products by\"\r\n            >\r\n              <MenuItem value={'nameAsc'}>Name - A to Z</MenuItem>\r\n              <MenuItem value={'nameDesc'}>Name - Z to A</MenuItem>\r\n              <MenuItem value={'priceAsc'}>Price - Low to High</MenuItem>\r\n              <MenuItem value={'priceDesc'}>Price - High to Low</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n        <Box sx={{\r\n          display: 'flex',\r\n          gap: { xs: '14px', sm: '25px', md: '16px', lg: '30px' },\r\n          mb: 2,\r\n          flexWrap: { xs: 'wrap' }\r\n        }}>\r\n          {\r\n            isLoading ? <Loader message=\"Loading products...\" /> :\r\n              products.length > 0\r\n                ? products.slice(0, index).map((product) => (\r\n                  <Product product={product} key={product.name} />\r\n                ))\r\n                : (\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    sx={{\r\n                      fontSize: { xs: '1em', md: '1.25em' },\r\n                    }}\r\n                  >\r\n                    {noResultsFound}\r\n                  </Typography>\r\n\r\n                )}\r\n        </Box>\r\n        {products.length > 0 && <Box sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          my: 3\r\n        }}>\r\n          {index < products?.length && (\r\n            <Button variant=\"contained\" size=\"large\" onClick={handleLoadMore}>\r\n              Show more products\r\n            </Button>\r\n          )}\r\n        </Box>\r\n        }\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Products);"],"names":["Product","React","Products","navigate","useNavigate","route","useParams","_useSearchParams","useSearchParams","searchParams","_slicedToArray","_useState","useState","JSON","parse","sessionStorage","getItem","_useState2","allProducts","setAllProducts","_useState3","_useState4","products","setProducts","_useState5","_useState6","index","setIndex","_useState7","_useState8","productCategoryHeader","setProductCategoryHeader","_React$useState","_React$useState2","allCategories","setAllCategories","_React$useState3","_React$useState4","category","setCategory","_React$useState5","_React$useState6","subCategories","setSubCategories","_React$useState7","_React$useState8","subCategory","setSubCategory","_useState9","_useState10","sortProductsBy","setSortProductsBy","_React$useState9","_React$useState10","noResultsFound","setNoResultsFound","_React$useState11","_React$useState12","isLoading","setLoading","fetchAllProducts","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_allProducts","response","filteredProducts","wrap","_context","prev","next","axios","concat","process","sent","data","values","shift","map","product","length","_product$","_product$2","_product$3","_product$4","_product$5","_product$6","_product$7","split","filter","element","allSubCategories","allFeatures","allThumbnailsSrc","allThumbnailsAlt","allThumbnailsPrices","feature","trim","toLowerCase","thumbnail","_allThumbnailsAlt$ind","_allThumbnailsPrices$","setItem","stringify","initializeProducts","initializeCategories","initializeSubCategories","t0","console","log","stop","apply","arguments","categories","push","_toConsumableArray","Set","results","productCategory","replaceAll","includes","get","searchQuery","name","storeProducts","_ref2","_callee2","hours","currentTime","productsSession","_context2","Date","getTime","removeItem","useEffect","handleProductFilter","event","type","target","value","_jsxs","children","Helmet","_jsx","content","Container","maxWidth","className","Box","sx","display","justifyContent","alignItems","flexDirection","xs","sm","pt","px","pb","Typography","variant","textAlign","fontSize","md","flexBasis","textTransform","FormControl","size","TextField","id","label","onInput","width","mt","mb","InputLabel","Select","labelId","onChange","MenuItem","sortBy","sort","p1","p2","price","gap","lg","flexWrap","Loader","message","slice","my","Button","onClick"],"sourceRoot":""}